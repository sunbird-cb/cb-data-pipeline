- set_fact:
    failed_datasources: []

- name: Get the ingestion stats
  uri:
    url: "{{ supervisor_stats_url }}"
    method: GET
    return_content: yes
  register : ingestion_stats

- name: Check the ingestion state
  set_fact:
    failed_datasources: "{{ failed_datasources }} + [ '{{ item.id }}' ]"
  when :  item.state != "RUNNING"
  with_items : "{{ ingestion_stats.content}}"

- debug:
    var: failed_datasources

- name: Alert slack with failed ingestion
  slack:
    token: '{{ druid_slack_token }}'
    msg: '{{ item }} ingestion is not running'
    channel: '{{ druid_slack_channel  }}'
    username: '{{ druid_slack_user }}'
    color: 'danger'
    icon_emoji: ':heavy_exclamation_mark:'
  with_items: "{{ failed_datasources }}"

- name: Terminate Failed Ingestion Tasks
  uri:
    url: "http://{{ druid_overlord_host }}:{{ druid_overlord_port}}/druid/indexer/v1/supervisor/{{ item }}/terminate"
    method: POST
    return_content: yes
  with_items: "{{ failed_datasources }}"

- name: ReStart Failed Ingestion Tasks
  shell : 'curl -X POST -H "Content-Type:application/json" -d @"{{druid_home}}"/"{{ druid_ingestion_specs[item].ingestion_file_name }}".json http://"{{ druid_overlord_host }}":"{{ druid_overlord_port }}"/druid/indexer/v1/supervisor'
  with_items: "{{ failed_datasources }}"

- name: sleep for 300 seconds till the supervisor loads 
  wait_for:
    timeout: 300
  when: failed_datasources|length > 0

- name: Get the ingestion stats after the restart
  uri:
    url: "{{ supervisor_stats_url }}"
    method: GET
    return_content: yes
  register : ingestion_stats

- name: Alert slack after restarting the ingestion for success
  slack:
    token: '{{ druid_slack_token }}'
    msg: "After restart {{ item.id }}  back to running"
    channel: '{{ druid_slack_channel  }}'
    username: '{{ druid_slack_user }}'
    color: 'good'
    icon_emoji: ':white_check_mark:'
  when :  item.state == "RUNNING" and item.id in failed_datasources
  with_items: "{{ ingestion_stats.content}}"

- name: Alert slack after restarting the ingestion
  slack:
    token: '{{ druid_slack_token }}'
    msg: "After restart {{ item.id }} still failing with error {{ item.detailedState }}"
    channel: '{{ druid_slack_channel  }}'
    username: '{{ druid_slack_user }}'
    color: 'danger'
    icon_emoji: ':heavy_exclamation_mark:'
  when :  item.state != "RUNNING"
  with_items: "{{ ingestion_stats.content}}"
