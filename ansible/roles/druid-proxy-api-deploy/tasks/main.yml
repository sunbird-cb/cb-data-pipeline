---
- name: Ensure env directory exists
  file:
    path: /home/deployer/env
    state: directory
    owner: root
    group: root

- name: Ensure stack directory exists
  file:
    path: /home/deployer/stack
    state: directory
    owner: root
    group: root

- name: Ensure config directory exists
  file:
    path: /home/deployer/config
    state: directory
    owner: root
    group: root

- name: debugging
  debug:
    msg: "sunbird_{{service_name}}.env"

- name: Remove env file
  file: path=/home/deployer/env/sunbird_{{service_name}}.env state=absent

- name: check if env file exists
  stat: path={{role_path}}/templates/sunbird_{{service_name}}.env
  register: out
  delegate_to: "localhost"

- debug: var=out

- name: Save service configurations into an env file
  template: src="sunbird_{{service_name}}.env" dest="/home/deployer/env/sunbird_{{service_name}}.env" mode=0644
  when: out.stat.exists

- name: Remove DruidProxyAPI service
  shell: "docker service rm druid-proxy-api"
  ignore_errors: yes

- name: Deploy DruidProxyAPI service
  shell: "docker service create --replicas {{ druid_proxy_replicas }} -p 8082:8082  --name druid-proxy-api --hostname druid-proxy-api --reserve-memory {{ druid_proxy_reservation_memory }} --limit-memory {{ druid_proxy_limit_memory }}  --network application_default --env-file /home/deployer/env/sunbird_druid-proxy-api.env  --with-registry-auth {{hub_org}}/{{image_name}}:{{image_tag}}"
  args:
    chdir: /home/deployer/stack
